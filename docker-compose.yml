# version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file: .env
    environment:
      MEDIA_ROOT: /srv/media         # 与 .env 一致
      MEDIA_PUBLIC_BASE: /media
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    volumes:
      - ./media:/srv/media           # 绑定宿主机 ./media
    restart: unless-stopped
    # 调试需要可放开
    # ports:
    #   - "8000:8000"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgresql:/var/lib/postgresql/data     # ✅ 绑定宿主机目录
      - ./db/initdb:/docker-entrypoint-initdb.d:ro
    ports:
      - "5433:5432"                  # 宿主 5433 -> 容器 5432（容器间互联仍用 5432）
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  caddy:
    image: caddy:2
    ports:
      - "80:80"
    volumes:
      - ./reverse-proxy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddydata:/data
      - ./media:/srv/media:ro        # 与 app 共用同一目录，只读挂载
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped

volumes:
  caddydata:
